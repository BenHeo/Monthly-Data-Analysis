country_region2 <- sixth %>%
select(Country, Region)
cr_union <- union(country_region1, country_region2)
tempSeven <- left_join(seventh, cr_union)
tempSeven[is.na(tempSeven$Region),] # to find which country has different name like Hong Kong S.A.R., China
seventh2 <- tempSeven %>%
select(1, 11, 2:7, 9, 8, 10) # change order of columns
happy_data <- bind_rows(fifth, sixth, seventh2) # bind three dfs at once
nrow(happy_data)
happy_data <- happy_data[,-c("Happy_Rank", "Happy_Score")]
country_scores <- happy_data %>%
group_by(Country, Region) %>%
summarise_all(mean)
# Gaussian Mixture Model
mvnormalmixEM(country_score, k = 5)
table(rowSums(country_score))
table(rowSums(country_score)) == 2
library(tidyverse)
library(data.table)
library(mixtools)
fiv <- fread("world-happiness-report/2015.csv")
six <- fread("world-happiness-report/2016.csv")
sev <- fread("world-happiness-report/2017.csv")
newcolnames <- c("Country", "Region", "Happy_Rank", "Happy_Score",
"Economy", "Family", "Health", "Freedom", "Trust", "Generosity", "Dystopia_Residual")
newcolnames2 <- c("Country", "Happy_Rank", "Happy_Score",
"Economy", "Family", "Health", "Freedom", "Generosity", "Trust", "Dystopia_Residual")
fifth <- fiv
sixth <- six %>%
select(-c(5, 6))
seventh <- sev %>%
select(-c(4, 5))
names(fifth) <- newcolnames
names(sixth) <- newcolnames
names(seventh) <- newcolnames2
country_region1 <- fifth %>%
select(Country, Region)
country_region2 <- sixth %>%
select(Country, Region)
cr_union <- union(country_region1, country_region2)
tempSeven <- left_join(seventh, cr_union)
tempSeven[is.na(tempSeven$Region),] # to find which country has different name like Hong Kong S.A.R., China
seventh2 <- tempSeven %>%
select(1, 11, 2:7, 9, 8, 10) # change order of columns
happy_data <- bind_rows(fifth, sixth, seventh2) # bind three dfs at once
nrow(happy_data)
happy_data <- happy_data[,-c("Happy_Rank", "Happy_Score")]
country_scores <- happy_data %>%
group_by(Country, Region) %>%
summarise_all(mean)
# Gaussian Mixture Model
mvnormalmixEM(country_score, k = 5)
country_name <- country_scores$Country
country_region <- country_scores$Region
country_score <- as.data.frame(country_scores) %>%
select(-Country, -Region)
country_score$Region <- as.factor(country_score$Region)
country_score$Region
country_scores
country_score <- as.data.frame(country_scores) %>%
select(-Country, -Region)
country_score
country_score$Region <- as.factor(country_score$Region)
country_score$Region <- as.factor(country_scores$Region)
country_name <- country_scores$Country
country_scores$Region <- as.factor(country_scores$Region)
country_region <- country_scores$Region
country_score <- as.data.frame(country_scores) %>%
select(-Country, -Region)
country_name
country_region
country_score
# Gaussian Mixture Model
mvnormalmixEM(country_score, k = 5)
table(rowSums(country_score))
nrow(rowSums(country_score))
length(rowSums(country_score))
length(unique(rowSums(country_score)))
# Gaussian Mixture Model
mvnormalmixEM(country_score, k = 3, epsilon = 1e-04)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 3, epsilon = 1e-04)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 3, epsilon = 1e-04)
plot(gmm, which = 2)
plot(gmm, which = 3)
plot(gmm, which = 2)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmmcluster
text(x,y, labels = country_name, col = gmmcluster)
country.d <- dist(country_score[,-1])
fit <- cmdscale(country.d, eig=TRUE, k=2, add=TRUE)
head(country_score)
country.d <- dist(country_score)
fit <- cmdscale(country.d, eig=TRUE, k=2, add=TRUE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
country.d <- dist(country_score)
fit <- cmdscale(country.d, eig=TRUE, k=2, add=TRUE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
country.d <- dist(country_score)
fit <- cmdscale(country.d, eig=TRUE, k=2, add=TRUE)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
fit <- cmdscale(country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
fit <- cmdscale(country.d, eig=F, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
fit <- cmdscale(country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
text(x,y, labels = country_name, col = gmmcluster)
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
fit <- cmdscale(2*country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
fit <- cmdscale(5*country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
table(gmmcluster)
ggplot(bind_cols(x,y,country_name, gmmcluster), aes(x, y, color = gmmcluster)) + geom_text(aes(gmmcluster))
ggplot(bind_cols(x,y,country_name, gmmcluster), aes(x, y, color = gmmcluster)) + geom_text()
ggplot(bind_cols(x,y,country_name, gmmcluster), aes(x, y, color = gmmcluster)) + geom_point()
ggplot(bind_cols(x=x,y=y,name=country_name, clust=gmmcluster), aes(x, y, color = clust)) + geom_point()
ggplot(bind_cols(x=x,y=y,name=country_name, clust=gmmcluster), aes(x, y, color = clust)) + geom_text()
ggplot(bind_cols(x=x,y=y,name=country_name, clust=gmmcluster), aes(x, y, color = clust)) + geom_text(aes(clust))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=gmmcluster), aes(x, y, color = clust)) + geom_text(aes(label = clust))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=gmmcluster), aes(x, y, color = clust)) + geom_text(aes(label = name))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=gmmcluster), aes(x, y)) +
geom_text(aes(label = name, color = clust))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust))
fit <- cmdscale(10*country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust))
kms <- kmeans(country_score, 5)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust))
gmm$posterior
gmmcluster
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust))
library(plotly)
g <- ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust))
ggplotly(g)
############ with region ##############
country_info <- rbind(country_region, country_score)
head(country_info)
country_region
############ with region ##############
country_info <- cbind(country_region, country_score)
head(country_info)
gmm <- mvnormalmixEM(country_info, k = 5, epsilon = 1e-04)
summayr(country_info)
summary(country_info)
gmm2 <- mvnormalmixEM(country_info, k = 5, epsilon = 1e-04)
gmm2
gmm2 <- mvnormalmixEM(country_info, k = 5, epsilon = 1e-04)
?mvnormalmixEM
gmm2 <- mvnormalmixEM(as.matrix(country_info), k = 5, epsilon = 1e-04)
as.matrix(country_info)
data.matrix(country_info)
gmm2 <- mvnormalmixEM(data.matrix(country_info), k = 5, epsilon = 1e-04)
gmm2 <- mvnormalmixEM(data.matrix(country_info), k = 5, epsilon = 1e-04)
gmm2 <- mvnormalmixEM(data.matrix(country_info), k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmmcluster
gmmcluster2 <- apply(gmm2$posterior, 1, function(row) which.max(row))
g <- ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster2)), aes(x, y)) +
geom_text(aes(label = name, color = clust))
ggplotly(g)
fit <- cmdscale(100*country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
fit <- cmdscale(country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
g <- ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust))
ggplotly(g)
g <- ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster2)), aes(x, y)) +
geom_text(aes(label = name, color = clust))
ggplotly(g)
?geom_text
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), check_overlap = T)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), check_overlap = F)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 5)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 0.5)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 1)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.5)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.2)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, position = "identity")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, nudge_x = 1)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, nudge_x = 1, nudge_y = 1)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, parse = TRUE)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, inherit.aes = TRUE)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, fontface = "bold",position=position_jitter(width=1,height=1))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, position=position_jitter(width=1,height=1))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, position=position_jitter(width=0.2,height=0.2))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, fontface = "bold",
position=position_jitter(width=0.2,height=0.2))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, fontface = "bold",
position=position_jitter(width=0.1,height=0.1))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.1, fontface = "bold",
position=position_jitter(width=0.3,height=0.3))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.3, fontface = "bold",
position=position_jitter(width=0.1,height=0.1))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.5, fontface = "bold",
position=position_jitter(width=0.1,height=0.1))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.5, fontface = "bold",
position=position_jitter(width=0.2,height=0.2))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.4, fontface = "bold",
position=position_jitter(width=0.2,height=0.2))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.4, fontface = "bold",
position=position_jitter(width=0.1,height=0.1))
g <- ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster2)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.4, fontface = "bold",
position=position_jitter(width=0.1,height=0.1))
ggplotly(g)
table(country_region)
kms <- kmeans(country_score, 10)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text(aes(label = name, color = clust), size = 3.4, fontface = "bold",
position=position_jitter(width=0.1,height=0.1))
dist(country_info)
country_info <- data.matrix(country_info)
dist(country_info)
country.d <- dist(country_info)
fit <- cmdscale(country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
?dist
country.d <- dist(country_score)
fit <- cmdscale(country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x,y, type = "n")
text(x,y, labels = country_name, col = gmmcluster)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust))
library(ggrepel)
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kms$cluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold")
kmscluster <- kms$cluster
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
ggtitle("Gaussian Mixture Cluster by happy_index")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
ggtitle("K-means by happy_index")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
ggtitle("K-means by happy_index") + xlab("")
kms <- kmeans(country_score, 5)
kmscluster <- kms$cluster
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
fit$points
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
names(country_scores)
autoplot(fit)
autoplot(gmm)
autoplot(kms)
autoplot(kmeans(country_score, 5), data = country_score, label = TRUE, label.size = 3, frame = TRUE)
autoplot(kmeans(country_score, 5), data = country_score, label = TRUE, label.size = 5, frame = TRUE)
autoplot(kmeans(USArrests, 3), data = USArrests,
label = TRUE, label.size = 3, frame = TRUE)
?autoplot
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(type='t',size =1) +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(fill=DIVERSITY), alpha=.2,type='t',size =1, geom="polygon") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(fill=DIVERSITY), alpha=.2,type='norm',size =1, geom="polygon") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.2,type='norm',size =1, geom="polygon") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust, group = clust), alpha=.2,type='norm',size =1, geom="polygon") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust, group = clust), alpha=.2,type='norm',size =1, geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust, group = clust), alpha=.2,type='norm',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust, group = clust), alpha=.3,type='norm',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
?cmdscale
fit
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust, group = clust), alpha=.1,type='norm', geom="polygon") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm', geom="polygon") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
kms <- kmeans(country_score, 5)
kmscluster <- kms$cluster
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm', geom="polygon") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-03)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-05)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 5e-05)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 5e-05)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
source('~/GitHub/Monthly-Data-Analysis/August2018/Happy_map.R', echo=TRUE)
# Gaussian Mixture Model
gmm <- mvnormalmixEM(country_score, k = 5, epsilon = 1e-04)
gmmcluster <- apply(gmm$posterior, 1, function(row) which.max(row))
kms <- kmeans(country_score, 5)
kmscluster <- kms$cluster
country.d <- dist(country_score)
fit <- cmdscale(country.d, eig=TRUE, k=2, add=F)
x <- fit$points[,1]
y <- fit$points[,2]
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(kmscluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm', geom="polygon") +
ggtitle("K-means by happy_index") + xlab("") + ylab("")
tsne_model_1 = Rtsne(as.matrix(data_tsne), check_duplicates=FALSE, pca=TRUE, perplexity=30, theta=0.5, dims=2)
country_score
tsne_model_1 = Rtsne(as.matrix(country_score), check_duplicates=FALSE, pca=TRUE, perplexity=30, theta=0.5, dims=2)
tsne_model = Rtsne(as.matrix(country_score), check_duplicates=FALSE, pca=TRUE, perplexity=30, theta=0.5, dims=2)
tsne_model$Y
df_sne <- as.data.frame(tsne_model$Y)
tsne_model$Y[,1]
ggplot(data.frame(x=tsne_model$Y[,1], y=tsne_model$Y[,2], clust=as.factor(gmmcluster), name=country_name), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm', geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index visualized using t-sne") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='norm',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
ggplot(data.frame(x=tsne_model$Y[,1], y=tsne_model$Y[,2], clust=as.factor(gmmcluster), name=country_name), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='t', geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index visualized using t-sne") + xlab("") + ylab("")
ggplot(bind_cols(x=x,y=y,name=country_name, clust=as.factor(gmmcluster)), aes(x, y)) +
geom_text_repel(aes(label = name, color = clust), fontface = "bold") +
stat_ellipse(aes(x=x, y=y, fill = clust), alpha=.1,type='t',geom="polygon") +
ggtitle("Gaussian Mixture Cluster by happy_index") + xlab("") + ylab("")
